var l=Object.create,c=Object.defineProperty,_=Object.getOwnPropertyDescriptor,o=Object.getOwnPropertyNames,d=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty,a=(e,t)=>function(){return t||(0,e[o(e)[0]])((t={exports:{}}).exports,t),t.exports},p=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of o(t))!f.call(e,r)&&r!==n&&c(e,r,{get:()=>t[r],enumerable:!(s=_(t,r))||s.enumerable});return e},v=(e,t,n)=>(n=e!=null?l(d(e)):{},p(c(n,"default",{value:e,enumerable:!0}),e)),b=a({"node_modules/tailwindcss/lib/util/createPlugin.js"(e){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return n}});function t(s,r){return{handler:s,config:r}}t.withOptions=function(s,r=()=>({})){const i=function(u){return{__options:u,handler:s(u),config:r(u)}};return i.__isOptionsFunction=!0,i.__pluginFunction=s,i.__configFunction=r,i};var n=t}}),O=a({"node_modules/tailwindcss/lib/public/create-plugin.js"(e){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"default",{enumerable:!0,get:function(){return s}});var t=n(b());function n(r){return r&&r.__esModule?r:{default:r}}var s=t.default}}),g=a({"node_modules/tailwindcss/plugin.js"(e,t){var n=O();t.exports=(n.__esModule?n:{default:n}).default}}),P=v(g());(0,P.default)(({addVariant:e})=>{e("intersect","&:not([no-intersect])")});var h={start(){if(document.readyState==="loading"){document.addEventListener("DOMContentLoaded",()=>this.observe());return}this.observe()},observe(){const e=['[class*=" intersect:"]','[class*=":intersect:"]','[class^="intersect:"]','[class="intersect"]','[class*=" intersect "]','[class^="intersect "]','[class$=" intersect"]'];document.querySelectorAll(e.join(",")).forEach(t=>{const n=new IntersectionObserver(s=>{s.forEach(r=>{if(!r.isIntersecting){t.setAttribute("no-intersect","");return}t.removeAttribute("no-intersect"),t.classList.contains("intersect-once")&&n.disconnect()})},{threshold:this.getThreshold(t)});n.observe(t)})},getThreshold(e){return e.classList.contains("intersect-full")?.99:e.classList.contains("intersect-half")?.5:0}},y=h;export{y as Observer};
